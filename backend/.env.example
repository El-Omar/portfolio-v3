# Application Configuration
NODE_ENV=development
PORT=5000
API_PREFIX=/api/v1

# MongoDB Configuration
MONGODB_URI=mongodb://root:example@mongodb:27017/portfolio?authSource=admin
MONGODB_HOST=mongodb
MONGODB_PORT=27017
MONGODB_DATABASE=portfolio
MONGODB_USERNAME=root
MONGODB_PASSWORD=example
MONGODB_AUTH_SOURCE=admin

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# JWT Configuration
JWT_SECRET=your-jwt-secret-key
JWT_EXPIRES_IN=7d

# Cloud Storage AWS
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_S3_BUCKET=your-bucket-name
AWS_REGION=us-east-1
AWS_ALLOWED_MIME_TYPES=image/jpeg,image/png,image/webp
AWS_MAX_FILE_SIZE=5 # in MB

# Content Management System
CMS_ADMIN_USERNAME=admin@example.com
CMS_ADMIN_PASSWORD=secure-password

# Frontend Configuration
NEXT_PUBLIC_API_URL=http://localhost:5000/api/v1
NEXT_PUBLIC_CMS_URL=http://localhost:5000/cms

# Authentication
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=your-nextauth-secret
GITHUB_ID=your-github-oauth-id
GITHUB_SECRET=your-github-oauth-secret

# -----------------------------------------------------
# README - Environment Configuration Guide For Future Self
# -----------------------------------------------------
# 1. Copy .env.example to create new environment files:
#    - .env.development (development environment)
#    - .env.production (production environment)
#
# 2. Never commit actual .env files to version control, duh
#
# 3. Use different values for different environments
#
# 4. Update .env.example when adding new variables
#
# -----------------------------------------------------
# Validation Schema => (src/config/env.ts)
# -----------------------------------------------------
# import { z } from 'zod';
#
# export const envSchema = z.object({
#   NODE_ENV: z.enum(['development', 'test', 'production']),
#   PORT: z.string().transform(Number),
#   MONGODB_URI: z.string().url(),
#   // ... add other validations
# });